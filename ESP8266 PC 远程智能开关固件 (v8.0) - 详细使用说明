# 

本固件旨在提供一个基于 ESP8266 的智能解决方案，通过巴法云 (BEMFA) 平台远程控制 PC 的开关机，并实时监控 PC 的电源状态，同时支持 OTA 固件更新、远程配置管理、微信告警通知等高级功能。

## 目录
1.  **功能概述**
2.  **硬件清单**
3.  **接线说明**
4.  **软件环境搭建**
5.  **固件烧录与初始配置**
6.  **巴法云平台配置**
7.  **操作指令与系统反馈**
8.  **高级功能**
9.  **注意事项与故障排除**
10. **程序生成关键词**

---

## 1. 功能概述

*   **远程控制 PC 开关机**：通过模拟 PC 机箱的电源按钮，实现远程开机、关机、强制关机。
*   **PC 状态实时监控**：通过读取 PC 电源指示灯（LED），智能判断 PC 当前处于开机、关机或休眠状态。
*   **巴法云平台集成**：所有控制指令和状态上报均通过巴法云 TCP 协议进行。
*   **双步 UI 状态同步 (v7.9 新增)**：为确保巴法云 UI 状态的可靠同步，采用“设备发送内部同步指令 -> 服务器回显 -> 设备发送最终 UI 状态指令”的两步确认机制。
*   **微信告警通知**：当系统出现异常（如内存碎片过高、WiFi 信号弱、错误计数超限）或按需报告时，可向绑定的微信推送消息。
*   **OTA 固件在线更新**：支持通过 HTTP 方式远程更新固件，无需拆卸设备。
*   **EEPROM 配置存储**：WiFi 凭据、巴法云服务器信息、PC 状态判断阈值、按键模拟时长等配置参数永久存储。
*   **智能配网 (SmartConfig)**：首次无 WiFi 配置时自动进入配网模式，方便部署。
*   **远程配置管理**：通过巴法云发送 JSON 格式指令，远程修改设备参数，支持密码保护。
*   **系统诊断信息**：可按需查询设备运行状态、内存使用、网络连接等详细信息。
*   **看门狗机制**：确保设备在异常情况下自动重启，提高稳定性。
*   **定时重启**：支持配置设备定期自动重启，保持系统健康。

---

## 2. 硬件清单

*   **ESP8266 开发板**：NodeMCU ESP-12E/F, ESP-01S, ESP32 开发板等（本固件基于 ESP8266）。
*   **5V 继电器模块**：1路或2路，用于模拟电源按钮。
*   **PC 机箱（带电源指示灯）**
*   **可选但强烈推荐**：
    *   **光耦隔离模块/电压转换模块**：用于安全读取 PC 电源 LED 信号，避免高电压对 ESP8266 造成损坏。
    *   **面包板与杜邦线**
    *   **USB 转串口模块** (如果使用 ESP-01S 等不带 USB 接口的开发板)

---

## 3. 接线说明

**重要提示：操作 PC 主板跳线前，务必断开 PC 电源！ESP8266 GPIO 口为 3.3V，请确保所有连接的外部信号电压兼容，必要时使用光耦或分压电阻！**

### 3.1 继电器连接 (模拟电源按钮)

*   **ESP8266 GPIO0 (PIN_PC_POWER)** → 继电器模块 `IN` (或 `SIG`) 引脚。
*   **ESP8266 `GND`** → 继电器模块 `GND` 引脚。
*   **ESP8266 `5V` (或外部 5V 供电)** → 继电器模块 `VCC` 引脚。
*   **继电器 `NO` (常开)** 端子 → 连接到 PC 主板的 `POWER SW` 跳线的一个引脚。
*   **继电器 `COM` (公共端)** 端子 → 连接到 PC 主板的 `POWER SW` 跳线的另一个引脚。
    *   *说明*：PC 的电源按钮实际上是一个瞬时短路开关。继电器在闭合时模拟按下电源按钮。

### 3.2 PC 电源 LED 信号读取

*   **PC 电源 LED 的正极** → **(强烈推荐)** 光耦模块输入端 (或通过适当分压电阻后) → **ESP8266 GPIO2 (PIN_LED_STATE)**。
*   **PC 电源 LED 的负极 (GND)** → 光耦模块负极 (或与 ESP8266 的 `GND` 共地)。
    *   *说明*：PC 电源 LED 通常工作在 3V-5V，但有些主板的 LED 可能更高。直接连接 GPIO2 可能损坏 ESP8266。请务必确认 PC LED 的电压，并使用光耦或分压电阻进行保护。GPIO2 (ESP-01S/ESP-12F 等的 `TX1` / `D4` 旁边) 在启动时会输出高电平，所以不建议用作直接控制输出，但作为输入读取 LED 状态是可行的。

### 3.3 ESP8266 供电

*   使用 USB 接口为 NodeMCU 等开发板供电。
*   如果使用 ESP-01S，请通过 USB 转串口模块或外部 3.3V 稳压电源供电。

---

## 4. 软件环境搭建

1.  **安装 Arduino IDE** (或使用 VS Code + PlatformIO)。
2.  **安装 ESP8266 开发板支持包**：
    *   在 Arduino IDE 中，打开 `文件` -> `首选项`。
    *   在 `附加开发板管理器网址` 中添加：`http://arduino.esp8266.com/stable/package_esp8266com_index.json`
    *   打开 `工具` -> `开发板` -> `开发板管理器`。
    *   搜索 `esp8266` 并安装最新版本 (例如 `ESP8266 Community` by `ESP8266 Community`).
3.  **安装所需库文件**：
    *   打开 `项目` -> `加载库` -> `管理库...`。
    *   搜索并安装以下库：
        *   `ESP8266WiFi` (通常随板卡包一起安装)
        *   `ESP8266httpUpdate` (通常随板卡包一起安装)
        *   `ESP8266HTTPClient` (通常随板卡包一起安装)
        *   `EEPROM` (通常随板卡包一起安装)
        *   `ArduinoJson` (by Benoît Blanchon)

---

## 5. 固件烧录与初始配置

1.  **打开固件代码**：将 `Remote_PC_BEMFA_OTA8.0.ino` 文件内容复制到 Arduino IDE。
2.  **修改用户私钥 (UID)**：
    *   在代码中找到以下行：
        ```cpp
        const char* uid = "xxx"; // 替换为你的巴法云UID
        ```
    *   将引号中的 `xxx` 替换为**您自己巴法云平台的 UID**。这是连接巴法云的关键。
3.  **（可选）修改默认主题**：
    *   在代码中找到以下行：
        ```cpp
        #define TOPIC_CONTROL "******001" // PC控制主题
        #define TOPIC_PC_STATE "PCState" // PC状态上报主题
        ```
    *   如果您希望使用自定义主题，请在此处修改。确保与巴法云平台上的主题名称一致。
4.  **（可选）修改调试模式**：
    *   ```cpp
        #define DEBUG_MODE 0 // 0为关闭，1为开启调试模式
        ```
    *   在调试阶段，可以将其设置为 `1`，这会强制日志级别为 `4` (最高详细度)，并使用 `testpc1` 等测试主题。发布前请确保设置为 `0`。
5.  **选择开发板和端口**：
    *   在 Arduino IDE 中，打开 `工具` -> `开发板`，选择您的 ESP8266 开发板 (例如 `NodeMCU 1.0 (ESP-12E Module)`)。
    *   在 `工具` -> `端口` 中，选择您的 ESP8266 连接的串口端口。
6.  **烧录固件**：
    *   点击 Arduino IDE 中的 `上传` 按钮。
    *   烧录完成后，打开 `工具` -> `串口监视器`，设置波特率为 `115200`。

### 初始 WiFi 配置 (SmartConfig)

首次运行或 EEPROM 中没有保存 WiFi 信息时（例如恢复出厂设置后），设备会自动进入 Airkiss 智能配网模式：

1.  串口监视器会显示 `SSID为空, 启动智能配网...` 或 `开始Airkiss智能配网 (3分钟超时)...`。
2.  此时，打开**巴法云微信小程序**或**巴法云 App**，进入“配置设备Airkiss联网”功能。
3.  按照提示输入您的 WiFi 名称 (SSID) 和密码，然后点击“开始配置”。
4.  设备连接成功后，WiFi 信息将自动保存到 EEPROM，并自动重启。此后，设备将自动连接该 WiFi。

---

## 6. 巴法云平台配置

在巴法云 (bemfa.com) 平台上，您需要进行以下配置：

1.  **注册账号并获取 UID**：
    *   如果您还没有巴法云账号，请注册并登录。
    *   您的 UID 会显示在“控制台”首页。
2.  **创建主题**：
    *   在“控制台”的“主题管理”中，添加以下主题（如果您在固件中使用了默认主题）：
        *   `pc001` (类型：文本) - 用于发送控制指令。
        *   `PCState` (类型：文本) - 用于接收 PC 状态及系统信息。
3.  **配置微信告警**：
    *   在“控制台”的“微信告警”中，启用该功能并绑定您的微信。
    *   在微信小程序中，您可以管理告警消息的接收。

---

## 7. 操作指令与系统反馈

所有指令均通过向 `TOPIC_CONTROL` 主题发送消息来执行。系统反馈和状态信息将上报到 `TOPIC_PC_STATE` 主题。

### 7.1 PC 控制指令

在巴法云 APP/小程序中，向 `fengpc001` (或您自定义的控制主题) 发送以下指令：

*   **开机**：`on`
    *   发送此指令后，设备将模拟短按 PC 电源按钮。
    *   若 PC 成功开机，`PCState` 主题将上报 `已开机, v7.9`。
*   **关机/休眠**：`off`
    *   发送此指令后，设备将模拟短按 PC 电源按钮。
    *   若 PC 成功关机/休眠，`PCState` 主题将上报 `已关机, v7.9` 或 `已休眠, v7.9`。
    *   如果 PC 在 5 分钟内未能关机，设备将自动执行强制关机操作 (模拟长按电源键)。
*   **重启**：`reboot`
    *   设备会立即执行 ESP8266 的软件重启。
*   **OTA 固件更新**：`update`
    *   设备将尝试从固件中预设的 URL 下载并更新固件。更新过程中 `PCState` 会有 `updateing` 或 `PCB升级中` 消息。
    *   **固件更新 URL**：`http://bin.bemfa.com/b/3BcODljZTI5MWM4NWQxYWI5ZGRlN2QxZTIzMzk3YTFhYzI=fengpc001.bin`
        *   **注意：** 您需要将自己的编译好的 `.bin` 文件上传到巴法云的“文件托管”功能，并获取其下载链接，然后修改代码中的 `FIRMWARE_URL_STR`。

### 7.2 系统信息与诊断指令

向 `pc001` (或您自定义的控制主题) 发送以下指令：

*   **获取设备信息**：`info`
    *   设备将向 `PCState` 主题发送详细的系统状态 JSON 报告 (分块发送)，并向微信推送一个紧凑的状态摘要。
*   **获取配置信息**：`get_config`
    *   设备将向 `PCState` 主题发送当前 EEPROM 配置的 JSON 报告 (分块发送)。
*   **设置日志级别**：`log=X` (X 为 0-4 的数字)
    *   示例：`log=4` (开启最高详细度日志)
    *   `log=0` (关闭所有日志输出，串口监视器会关闭)
    *   日志级别设置会保存到 EEPROM。
*   **系统诊断**：`diag` 或 `diag:command`
    *   `diag` 或 `diag:all`：发送包含所有诊断信息的详细 JSON 报告到 `PCState`。
    *   `diag:memory`：上报内存使用情况 (空闲堆、最大空闲块、碎片率)。
    *   `diag:network`：上报网络状态 (WiFi 连接、RSSI、TCP 连接、IP 地址)。
    *   `diag:status`：上报紧凑的系统状态摘要。
    *   `diag:reset_stats`：重置 WiFi/TCP 错误计数和重启计数器 (此操作会保存到 EEPROM)。

### 7.3 远程配置指令

远程修改设备配置，需要通过 `config:` 或 `secure_config:` 指令发送 JSON 格式的数据。

*   **普通远程配置**：`config:{"key":"value", ...}`
    *   示例：`config:{"wifi":{"ssid":"MyNewWiFi","password":"NewPassword"}}`
    *   示例：`config:{"system":{"log_level":3,"auto_reboot":7}}`
    *   **注意**：此指令不带密码验证，如果 `config.config_password` 为空，则可以直接使用。
*   **安全远程配置 (带密码)**：`secure_config:YourPassword:{"key":"value", ...}`
    *   示例：`secure_config:123456:{"system":{"report_interval":10}}`
    *   如果 `config.config_password` 配置了密码，则必须使用此指令并提供正确的密码。

#### 可配置项示例 (JSON 格式)

```json
{
  "wifi": {
    "ssid": "您的WiFi名称",
    "password": "您的WiFi密码"
  },
  "tcp": {
    "server": "bemfa.com",
    "port": 8344,
    "heartbeat": 10 // 心跳间隔（秒）
  },
  "thresholds": {
    "on": 90,        // PC开机LED占空比阈值 (%)
    "off": 5,        // PC关机LED占空比阈值 (%)
    "debounce": 5    // PC状态去抖动时间（秒）
  },
  "timing": {
    "short_press": 800, // 短按电源键时长 (毫秒)
    "long_press": 8000  // 长按电源键时长 (毫秒，用于强制关机)
  },
  "system": {
    "log_level": 3,     // 日志详细级别 (0-4)
    "report_interval": 5, // 状态报告间隔 (分钟)
    "auto_reboot": 10,   // 自动重启天数 (0为关闭)
    "debug_mode": 0      // 调试模式 (0/1，重启生效)
  },
  "security": {
    "remote_config": 1,   // 是否允许远程配置 (0/1)
    "config_password": "您的配置密码" // 远程配置密码 (空为无密码)
  }
}
```

### 7.4 内部状态同步指令 (v7.9 新增)

*   `state:on` 和 `state:off`：这两个是设备内部使用的指令，用于在巴法云 UI 上同步 PC 的实际状态。**用户无需手动发送这些指令**。
    *   当设备检测到 PC 物理状态变化 (例如从关机到开机) 时，它会首先向 `TOPIC_CONTROL` 发送 `state:on`。
    *   当设备接收到服务器回显的 `state:on` 指令时，它会设置一个 `g_ignore_next_on` 标志，然后向 `TOPIC_CONTROL` 发送最终的 `on` 指令以更新 UI。
    *   `g_ignore_next_on` 标志确保设备在收到服务器回显的 `on` 指令时将其忽略，从而防止无限循环。`state:off` 和 `off` 也遵循同样的逻辑。

---

## 8. 高级功能

*   **恢复出厂设置**：
    *   在 `setup()` 函数中，如果配置校验失败或重启次数过多，会自动调用 `restoreFactory()`。
    *   您也可以修改代码，增加一个通过指令或长按特定按钮来触发 `restoreFactory()` 的功能。
*   **串口调试指令**：通过连接串口监视器，您可以手动输入以下指令：
    *   `log=X`：修改日志级别。
    *   `reboot`：重启设备。

---

## 9. 注意事项与故障排除

*   **ESP8266 供电稳定性**：ESP8266 对电源质量要求较高，请使用稳定可靠的 5V/1A 或更高电流的电源适配器。
*   **PC LED 信号安全**：再次强调，务必确认 PC 电源 LED 的电压，并使用光耦或分压电阻来保护 ESP8266 的 GPIO2 引脚。
*   **PC 电源按钮连接**：确保继电器正确连接到主板的 `POWER SW` 跳线。错误的连接可能导致 PC 无法开机或损坏。
*   **WiFi 连接问题**：
    *   检查您的 WiFi SSID 和密码是否正确。
    *   确保 ESP8266 距离路由器足够近，信号强度良好。
    *   如果 SmartConfig 失败，尝试手动在代码中写入 `stassid` 和 `stapsw` 后重新烧录。
*   **TCP 连接问题**：
    *   检查您的巴法云 UID 是否正确。
    *   确保巴法云服务器地址和端口没有被防火墙阻止。
*   **PC 状态识别不准确**：
    *   根据您的 PC 电源 LED 闪烁模式，调整 `LED_ON_DUTY_CYCLE_THRESHOLD` 和 `LED_OFF_DUTY_CYCLE_THRESHOLD` 的值。使用 `log=4` 模式可以查看 LED 采样时的占空比数据，帮助您校准。
    *   `STATE_DEBOUNCE_TIME` (对应配置中的 `debounce_time`) 用于避免 LED 短暂波动造成的误判，可适当调整。
*   **微信告警未收到**：
    *   检查巴法云微信告警功能是否已开启并绑定。
    *   确保 `http://apis.bemfa.com` 能够正常访问。
*   **内存碎片/弱信号告警**：这些是 ESP8266 常见的系统状态提示，不一定表示严重故障，但可以作为优化的参考。
*   **自动重启**：`auto_reboot` 配置是为了维护系统长期稳定性，请根据需求设置。

---

