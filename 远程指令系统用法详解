`ESP8266_PC_Controller.ino`固件中远程指令系统（`processTcpCommand`函数及其调用的子函数）的用法。

---

### **远程指令系统（`processTcpCommand`）用法详解**

#### **一、 指令发送方式**

所有指令都需要通过**巴法云（Bemfa）平台**发送。您可以在巴法云的设备控制台、或者通过调用其HTTP API等方式，向设备绑定的**控制主题（Topic）**发送消息。

根据固件设置，控制主题分为两种：
*   **发布模式**: `fengpc001`
*   **调试模式**: `testfengpc1`

您发送的指令内容就是消息（msg）的内容。

#### **二、 指令格式与分类**

该固件的指令系统非常强大，大致可分为四大类：**基础控制指令**、**高级配置指令**、**系统诊断指令**和**日志管理指令**。所有指令都是**大小写敏感**的。

---

### **1. 基础控制指令**

这些是最常用的指令，用于控制PC的开关和设备自身。

| 指令 | 功能 | 用法说明 | 示例 |
| :--- | :--- | :--- | :--- |
| `on` | **开机/唤醒** | 当检测到PC处于“关机”或“休眠”状态时，执行一次短按电源键的动作以开机或唤醒。如果PC已开机，此指令将被忽略。 | `on` |
| `off` | **关机** | 当检测到PC处于“开机”状态时，执行一次短按电源键的动作以触发系统正常关机。如果PC未开机，指令将被忽略。 | `off` |
| `update` | **固件升级 (OTA)** | 触发设备通过OTA（空中下载）方式从预设的URL地址下载并更新固件。更新期间设备会自动重启。 | `update` |
| `reboot` | **设备重启** | 命令ESP8266设备立即安全重启。这不会影响PC的状态，仅重启控制器本身。 | `reboot` |

**发送示例（通过巴法云控制台）:**
1.  选择主题为 `fengpc001`。
2.  在消息输入框中输入 `on`。
3.  点击发送。设备就会执行开机动作。

---

### **2. 高级配置指令**

这是该固件最强大的功能之一，允许您通过网络远程修改设备的几乎所有运行参数，而无需重新烧录固件。

#### **2.1 无密码配置（通用配置）**

**前置条件**：固件中的远程配置开关必须为开启状态（默认可能为关闭，需要通过安全配置指令开启）。

**指令格式**：
`config:<JSON数据>`

其中 `<JSON数据>` 是一个严格的JSON格式字符串，包含了您想要修改的参数。您可以只包含需要修改的项。

**可配置的JSON字段:**

*   `wifi`: WiFi网络设置
    *   `ssid`: WiFi名称 (字符串)
    *   `password`: WiFi密码 (字符串)
*   `tcp`: TCP服务器设置
    *   `server`: 服务器地址 (字符串, 例如 "bemfa.com")
    *   `port`: 服务器端口 (数字, 例如 8344)
    *   `heartbeat`: 心跳间隔 (秒, 数字)
    *   `reconnect`: 重连延迟 (秒, 数字)
*   `thresholds`: PC状态检测阈值
    *   `on`: 判定为“开机”的占空比阈值 (%) (数字, 0-100)
    *   `off`: 判定为“关机”的占空比阈值 (%) (数字, 0-100)
    *   `debounce`: 状态防抖时间 (秒, 数字)
*   `timing`: 按键模拟时序
    *   `short_press`: 短按时长 (毫秒, 数字)
    *   `long_press`: 长按时长 (毫秒, 数字)
*   `system`: 系统级参数
    *   `log_level`: 日志输出级别 (数字, 0-4)
    *   `report_interval`: 系统状态报告间隔 (分钟, 数字)
    *   `auto_reboot`: 计划性自动重启间隔 (天, 数字)
    *   `debug_mode`: 调试模式开关 (数字, 0或1)

**使用示例:**

1.  **只想修改WiFi密码:**
    `config:{"wifi":{"password":"MyNewPassword123"}}`

2.  **同时修改开机阈值和心跳间隔:**
    `config:{"thresholds":{"on":92},"tcp":{"heartbeat":25}}`

3.  **修改多个复杂参数:**
    `config:{"wifi":{"ssid":"MyHome_5G","password":"new_password"},"system":{"log_level":4,"report_interval":10}}`

发送指令后，设备会尝试解析并应用配置。如果成功，它会通过**控制主题（`fengpc001`）**返回一条成功消息；如果失败（如JSON格式错误、参数无效），则返回错误消息。

#### **2.2 带密码的安全配置**

为了防止未经授权的配置修改，固件支持带密码的配置指令。

**指令格式**：
`secure_config:<密码>:<JSON数据>`

*   `<密码>`: 您在设备配置中设定的密码。如果固件中从未设置过密码（默认为空），则任何密码（甚至空密码）都无法通过验证，此时必须先通过物理方式（串口）或通用配置指令设置一个密码。
*   `<JSON数据>`: 与无密码配置中的JSON数据完全相同。

**使用示例:**

假设您已将配置密码设置为 `mySecretPwd`。

**修改TCP服务器地址和端口:**
`secure_config:mySecretPwd:{"tcp":{"server":"new.server.com","port":8888}}`

**开启远程配置并设置一个新密码:**
`secure_config:mySecretPwd:{"security":{"remote_config":1,"config_password":"a_new_strong_password"}}`

---

### **3. 系统诊断指令**

这些指令用于远程获取设备的内部状态，是进行故障排查的利器。

**指令格式**：
`diag:<诊断项目>`

| 诊断项目 | 功能 | 返回信息示例 |
| :--- | :--- | :--- |
| `memory` | **获取内存状态** | `DIAG: Memory: Free=15328, MaxBlock=15280, Fragmentation=1%` |
| `network` | **获取网络状态** | `DIAG: Network: WiFi=Connected, RSSI=-55 dBm, TCP=Connected, IP=192.168.1.100` |
| `status` | **获取完整系统状态报告** | 返回一个包含固件版本、运行时间、内存、网络、PC状态、错误统计等详细信息的JSON字符串。 |
| `reset_stats` | **重置统计信息** | 清零设备内部的WiFi失败次数、TCP失败次数和重启次数计数器。返回 `DIAG: Statistics reset`。 |

**使用示例:**
要检查设备的WiFi信号强度和IP地址，发送指令：
`diag:network`

设备会通过**控制主题**返回诊断结果。

---

### **4. 日志管理指令**

允许您在设备运行时动态调整串口日志的详细程度。

**指令格式**：
`set_log:<日志级别>`

*   `<日志级别>` 是一个从0到4的数字：
    *   `0`: 关闭所有日志
    *   `1`: 只输出错误 (Error)
    *   `2`: 输出错误和警告 (Warning)
    *   `3`: 输出错误、警告和信息 (Info) - **默认级别**
    *   `4`: 输出所有日志，包括调试信息 (Debug) - **最详细**

**使用示例:**
您怀疑设备频繁断线，想查看详细的调试信息，可以发送：
`set_log:4`

之后，如果您的设备连接着电脑串口，就能看到最详细的运行日志。排查完问题后，为减少系统开销，可以将其调回正常级别：
`set_log:3`

---

**总结:** 该远程指令系统设计得非常全面和专业，将一个简单的智能开关提升到了可远程维护和诊断的工业级设备水平。熟练掌握这些指令，您将能够最大限度地发挥该固件的潜力。
